{"version":3,"sources":["UsersList.js","Users.js","App.js","reportWebVitals.js","index.js"],"names":["UsersList","props","usersLiElements","usersList","map","user","name","onClick","removeUserMethod","id","className","Users","addUser","e","preventDefault","newUser","Date","now","_inputName","value","setState","state","users","concat","removeUser","userID","filter","onSubmit","this","ref","element","type","placeholder","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TA4BeA,MAzBf,SAAmBC,GACjB,IACIC,EADYD,EAAME,UACUC,KAAI,SAACC,GAAD,OAClC,+BACGA,EAAKC,KACN,sBACEC,QAAS,WACPN,EAAMO,iBAAiBH,EAAKI,KAFhC,iBAFOJ,EAAKI,OAYhB,OACE,oBACEC,UAAU,cADZ,SAIGR,KC0CQS,E,kDA3Db,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IAMRW,QAAU,SAACC,GACTA,EAAEC,iBAEF,IAAIC,EAAU,CACZN,GAAIO,KAAKC,MACTX,KAAM,EAAKY,WAAWC,OAKxB,EAAKC,UAAS,SAACC,GACb,MAAO,CACLC,MAAOD,EAAMC,MAAMC,OAAOR,OAI9B,EAAKG,WAAWC,MAAQ,IAvBP,EA0BnBK,WAAa,SAACC,GACZ,EAAKL,UAAS,SAACC,GACb,MAAO,CACLC,MAAOD,EAAMC,MAAMI,QAAO,SAACrB,GACzB,OAAOA,EAAKI,KAAOgB,UA5BzB,EAAKJ,MAAQ,CACXC,MAAO,IAHQ,E,0CAoCnB,WAAU,IAAD,OACP,OACE,sBAAKZ,UAAU,aAAf,UACE,6CACA,uBAAMiB,SAAUC,KAAKhB,QAArB,UACE,uBACEiB,IAAK,SAACC,GACJ,EAAKZ,WAAaY,GAEpBC,KAAK,OACLC,YAAY,eAEd,wBAAQD,KAAK,SAAb,yBAEF,cAAC,EAAD,CACE5B,UAAWyB,KAAKP,MAAMC,MACtBd,iBAAkBoB,KAAKJ,oB,GArDbS,aCSLC,MAVf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCIOyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c9755c4b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./UsersList.css\";\r\n\r\nfunction UsersList(props) {\r\n  let usersList = props.usersList;\r\n  let usersLiElements = usersList.map((user) => (\r\n    <li key={user.id}>\r\n      {user.name}\r\n      <span\r\n        onClick={() => {\r\n          props.removeUserMethod(user.id);\r\n        }}\r\n      >\r\n        X\r\n      </span>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <ul\r\n      className=\"the-list\r\n  \"\r\n    >\r\n      {usersLiElements}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default UsersList;\r\n","import React, { Component } from \"react\";\r\nimport \"./Users.css\";\r\n\r\nimport UsersList from \"./UsersList\";\r\n\r\nclass Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  addUser = (e) => {\r\n    e.preventDefault();\r\n\r\n    let newUser = {\r\n      id: Date.now(),\r\n      name: this._inputName.value,\r\n    };\r\n\r\n    //     console.log(newUser);\r\n\r\n    this.setState((state) => {\r\n      return {\r\n        users: state.users.concat(newUser),\r\n      };\r\n    });\r\n\r\n    this._inputName.value = \"\";\r\n  };\r\n\r\n  removeUser = (userID) => {\r\n    this.setState((state) => {\r\n      return {\r\n        users: state.users.filter((user) => {\r\n          return user.id !== userID;\r\n        }),\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"users-main\">\r\n        <h1>User's List</h1>\r\n        <form onSubmit={this.addUser}>\r\n          <input\r\n            ref={(element) => {\r\n              this._inputName = element;\r\n            }}\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n          />\r\n          <button type=\"submit\">Add user</button>\r\n        </form>\r\n        <UsersList\r\n          usersList={this.state.users}\r\n          removeUserMethod={this.removeUser}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Users from \"./Users\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Users />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}